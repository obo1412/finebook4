<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ManagerMapper">
	<resultMap id="manager" type="com.gaimit.mlm.model.Manager">
		<result property="idMng" column="id_mng"/>
		<result property="idLibMng" column="id_lib_mng"/>
		<result property="userIdMng" column="user_id_mng"/>
		<result property="userPwMng" column="user_pw_mng"/>
		<result property="nameMng" column="name_mng"/>
		<result property="emailMng" column="email_mng"/>
		<result property="langMng" column="lang_mng"/>
		
		<!-- 이하 도서관 칼럼 -->
		<result property="nameLib" column="name_lib"/>
		<result property="locLib" column="loc_lib"/>
		<result property="kioskMode" column="kiosk_mode"/>

	</resultMap>
	
	<!-- 아이디 중복검사를 수행한다 -->
	<!-- <select id="selectUserIdCount" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT count(id) FROM member WHERE user_id=#{userId}
	</select> -->
	
	<!-- 이메일 중복 검사를 수행한다 -->
	<!-- <select id="selectEmailCount" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT count(id) FROM member WHERE email=#{email}
	</select> -->

	<!-- 안씀 -->	
	<!-- 마지막 회원아이디(숫자)를 확인한다. -->
	<select id="selectLastJoinedId" parameterType="com.gaimit.mlm.model.Manager" resultType="int">
		SELECT MAX(id) FROM manager
	</select>

	<!-- 선수(회원정보)목록 조회 -->
	<select id="selectManagerList" parameterType="com.gaimit.mlm.model.Manager" resultMap="manager">
		SELECT
			id_mng, id_lib_mng, user_id_mng, user_pw_mng, name_mng
		FROM manager
		ORDER BY id ASC
	</select>
	
	<!-- 선수목록 전체 데이터 수 얻기 -->
	<select id="selectManagerCount" parameterType="com.gaimit.mlm.model.Manager"
		resultType="int">
		SELECT count(id)
		FROM manager
	</select>
	
	<!-- 회원정보를 저장한다 : 가입 -->
	<insert id="insertManager" parameterType="com.gaimit.mlm.model.Manager" useGeneratedKeys="true" keyProperty="id_mng">
		INSERT INTO manager (
			id_lib_mng, user_id_mng, user_pw_mng, name_mng, email_mng
		) VALUES (
			#{idLibMng}, #{userIdMng}, password(#{userPwMng}), #{nameMng}, #{emailMng}
		)
	</insert>
	
	<!-- 아이디와 비밀번호가 일치하는 회원정보를 조회한다. -->
	<select id="selectLoginInfo" parameterType="com.gaimit.mlm.model.Manager" resultMap="manager">
		SELECT
			id_mng, id_lib_mng, user_id_mng, user_pw_mng, name_mng, email_mng,
			name_lib, loc_lib, lang_mng, kiosk_mode
		FROM manager m
		INNER JOIN library l
		ON m.id_lib_mng = l.id_lib
		WHERE user_id_mng=#{userIdMng} AND user_pw_mng=password(#{userPwMng})
		ORDER BY id_mng DESC
		LIMIT 0, 1
	</select>
	
	<!-- 안씀 아직 -->
	<!-- 비밀번호 재발급 : 이메일주소가 일치하는 비밀번호를 변경한다. -->
	<update id="updateManagerPasswordByEmail" parameterType="com.gaimit.mlm.model.Manager">
		UPDATE manager SET user_pw_mng=password(#{userPwMng}), edit_date=now()
		WHERE email=#{email};
	</update>
	
	<!-- 현재 로그인 중인 관리자의 비밀번호를 검사한다. -->
	<select id="selectManagerPasswordCount" >
		SELECT count(id_mng) FROM manager
		WHERE id_mng=#{idMng} AND user_pw_mng=password(#{userPwMng})
	</select>
	
	<!-- 회원정보를 삭제한다 : 탈퇴 -->
	<delete id="deleteManager" parameterType="com.gaimit.mlm.model.Manager">
		DELETE FROM manager
		WHERE id_mng=#{idMng}
			AND id_lib_mng=#{idLibMng};
	</delete>
	
	<!-- 회원정보를 변경한다 -->
	<update id="updateManager" parameterType="com.gaimit.mlm.model.Manager">
		UPDATE manager SET
			name_mng=#{nameMng}
			
			<if test="newUserPw != null and newUserPw != ''">
				user_pw_mng=password(#{newUserPwMng})
			</if>
			
			<choose>
				<when test="profileImg == ''">
					,profile_img=null
				</when>
				<when test="profileImg != null">
					,profile_img=#{profileImg}
				</when>
			</choose>
		WHERE id_mng=#{idMng}
	</update>
	
	<!-- 일련번호에 의한 회원정보 조회 도서관 정보 포함 -->
	<select id="selectManager" parameterType="com.gaimit.mlm.model.Manager" resultMap="manager">
		SELECT
			id_mng, id_lib_mng, user_id_mng, user_pw_mng, name_mng, email_mng,
			name_lib, loc_lib, lang_mng, kiosk_mode
		FROM manager m
		INNER JOIN library l ON m.id_lib_mng = l.id_lib
		WHERE id_mng=#{idMng}
	</select>
	
	<update id="updateManagerLanguage" parameterType="com.gaimit.mlm.model.Manager">
		UPDATE manager SET
			lang_mng=#{langMng}
		WHERE id_mng=#{idMng}
	</update>
	
	<!-- 도서관별로 관리자 조회 admin_setting에 사용 -->
	<select id="selectManagerListByLib" parameterType="com.gaimit.mlm.model.Manager" resultMap="manager">
		SELECT
			id_mng, id_lib_mng, user_id_mng, user_pw_mng, name_mng,
			email_mng, lang_mng
		FROM manager
		WHERE id_lib_mng = #{idLibMng}
		ORDER BY id_mng ASC
	</select>
	
	<select id="selectCountForUserIdDuplicateCheck" parameterType="com.gaimit.mlm.model.Manager" resultType="int">
		SELECT COUNT(id_mng) FROM manager
		WHERE user_id_mng=#{userIdMng}
	</select>
	
	
</mapper>