<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BookHeldMapper">
	<resultMap id="bookHeld" type="com.gaimit.mlm.model.BookHeld">
		<!-- beans클래스에서 상속을 받았더라도, 맵퍼에선 명시해줘야한다. -->
		<result property="idBook" column="id_book"/>
		<result property="titleBook" column="title_book"/>
		<result property="writerBook" column="writer_book"/>
		<result property="categoryBook" column="category_book"/>
		<result property="publisherBook" column="publisher_book"/>
		<result property="pubDateBook" column="pub_date_book"/>
		<result property="priceBook" column="price_book"/>
		<result property="isbn10Book" column="isbn10_book"/>
		<result property="isbn13Book" column="isbn13_book"/>
		<result property="descriptionBook" column="description_book"/>
		
		<!-- 이하 bookHeld 칼럼 -->
		<result property="id" column="id"/>
		<result property="libraryIdLib" column="library_id_lib"/>
		<result property="bookIdBook" column="book_id_book"/>
		<result property="title" column="title"/>
		<result property="writer" column="writer"/>
		<result property="publisher" column="publisher"/>
		<result property="pubDate" column="pub_date"/>
		<result property="pubDateYear" column="pub_date_year"/>
		<result property="price" column="price"/>
		<result property="isbn10" column="isbn10"/>
		<result property="isbn13" column="isbn13"/>
		<result property="category" column="category"/>
		<result property="bookShelf" column="book_shelf"/>
		<result property="description" column="description"/>
		<result property="regDate" column="reg_date"/>
		<result property="editDate" column="edit_date"/>
		<result property="localIdBarcode" column="local_id_barcode"/>
		<result property="sortingIndex" column="sorting_index"/>
		<result property="purchasedOrDonated" column="purchased_or_donated"/>
		<result property="available" column="available"/>
		<result property="additionalCode" column="additional_code"/>
		<result property="classificationCode" column="classification_code"/>
		<result property="authorCode" column="author_code"/>
		<result property="volumeCode" column="volume_code"/>
		<result property="copyCode" column="copy_code"/>
		<result property="rfId" column="rf_id"/>
		<result property="bookOrNot" column="book_or_not"/>
		<result property="page" column="page"/>
		<result property="bookSize" column="book_size"/>
		<result property="imageLink" column="image_link"/>
		
		<result property="idCountry" column="id_country"/>
		<result property="nameCountry" column="name_country"/>
		
		<!-- library 테이블 -->
		<result property="nameLib" column="name_lib"/>
		
		<!-- tag 관련 -->
		<result property="tag" column="tag"/>

		
		
	</resultMap>
	
	<!-- 아이디 중복검사를 수행한다 -->
	<!-- <select id="selectUserIdCount" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT count(id) FROM member WHERE user_id=#{userId}
	</select> -->
	
	<!-- 이메일 중복 검사를 수행한다 -->
	<!-- <select id="selectEmailCount" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT count(id) FROM member WHERE email=#{email}
	</select> -->


	<!-- 도서 목록 조회 -->
	<!-- serviceImpl에서 getBookHeldList -->
	<select id="selectBookHeldList" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title, writer, publisher, pub_date, price,
			isbn10, isbn13, category, book_shelf, description,
			reg_date, edit_date,
			local_id_barcode, purchased_or_donated, available,
			additional_code, classification_code, author_code,
			volume_code, copy_code,
			tag, rf_id, book_or_not, page, book_size, image_link,
			library_id_lib, c.id_country, c.name_country
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		LEFT OUTER JOIN book_country c ON h.id_country= c.id_country
		WHERE library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
		<choose>
			<when test="(title != null) || (writer != null)
							|| (publisher != null) || (nameCountry != null)
							|| (bookShelf != null) || (additionalCode != null)">
					<if test="title != null">
						AND (
							(REPLACE(title,' ','')) LIKE concat('%', #{title}, '%')
							OR (title LIKE concat('%', #{title}, '%'))
							OR (local_id_barcode LIKE concat('%', #{title}, '%'))
							OR (rf_id LIKE CONCAT('%', #{title}, '%'))
							OR (isbn13 LIKE CONCAT('%', #{title}, '%'))
							<if test="tag != null">
								OR (tag LIKE CONCAT('%', #{title}, '%'))
							</if>
						)
					</if>
					<if test="writer != null">
						AND (
							(REPLACE(writer,' ','')) LIKE concat('%', #{writer}, '%')
							OR (writer LIKE concat('%', #{writer}, '%'))
						)
					</if>
					<if test="publisher != null">
						AND (
							(REPLACE(publisher,' ','')) LIKE concat('%', #{publisher}, '%')
							OR (publisher LIKE concat('%', #{publisher}, '%'))
						)
					</if>
					<if test="nameCountry != null">
						AND (
							(REPLACE(name_country,' ','')) LIKE concat('%', #{nameCountry}, '%')
							OR (name_country LIKE concat('%', #{name_country}, '%'))
						)
					</if>
					
					<!-- <choose> -->
						<if test="bookShelf!=null">
							<if test='bookShelf.equals("uncateg")'>
								AND book_shelf is null
							</if>
							<if test='bookShelf != null and !bookShelf.equals("uncateg")'>
								AND book_shelf = #{bookShelf}
							</if>
						</if>
						<!-- <otherwise>
							
						</otherwise>
					</choose> -->
					
					<!-- 별치기호 컨트롤 -->
					<if test="additionalCode != null">
						<choose>
							<when test="additionalCode.equals('emptyAddi')">
								AND additional_code is null
							</when>
							<otherwise>
								AND additional_code = #{additionalCode}
							</otherwise>
						</choose>
					</if>
				
				ORDER BY volume_code*1 ASC, title ASC
			</when>
			<otherwise>
				ORDER BY id DESC
			</otherwise>
		</choose>
		LIMIT #{limitStart}, #{listCount}
	</select>
	
	<!-- pagination을 위한 전체 도서수 체크 -->
	<select id="selectBookCountForPage" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			COUNT(id)
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		LEFT OUTER JOIN book_country c ON h.id_country= c.id_country
		<where>
			library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
		
			<choose>
				<when test="(title != null) || (writer != null)
								|| (publisher != null) || (nameCountry != null)
								|| (bookShelf != null) || (additionalCode != null)">
					<if test="title != null">
						AND (
							(REPLACE(title,' ','')) LIKE concat('%', #{title}, '%')
							OR (title LIKE concat('%', #{title}, '%'))
							OR (local_id_barcode LIKE concat('%', #{title}, '%'))
							OR (rf_id LIKE CONCAT('%', #{title}, '%'))
							OR (isbn13 LIKE CONCAT('%', #{title}, '%'))
							<if test="tag != null">
								OR (tag LIKE CONCAT('%', #{title}, '%'))
							</if>
						)
					</if>
					<if test="writer != null">
						AND (
							(REPLACE(writer,' ','')) LIKE concat('%', #{writer}, '%')
							OR (writer LIKE concat('%', #{writer}, '%'))
						)
					</if>
					<if test="publisher != null">
						AND (
							(REPLACE(publisher,' ','')) LIKE concat('%', #{publisher}, '%')
							OR (publisher LIKE concat('%', #{publisher}, '%'))
						)
					</if>
					<if test="nameCountry != null">
						AND (
							(REPLACE(name_country,' ','')) LIKE concat('%', #{nameCountry}, '%')
							OR (name_country LIKE concat('%', #{name_country}, '%'))
						)
					</if>
					
					<if test="bookShelf!=null">
						<if test='bookShelf.equals("uncateg")'>
							AND book_shelf is null
						</if>
						<if test='bookShelf != null and !bookShelf.equals("uncateg")'>
							AND book_shelf = #{bookShelf}
						</if>
					</if>
					<!-- <choose>
						<when test='bookShelf.equals("uncateg")'>
							AND book_shelf is null
						</when>
						<when test='bookShelf != null and !bookShelf.equals("uncateg")'>
							AND book_shelf = #{bookShelf}
						</when>
						<otherwise>
							
						</otherwise>
					</choose> -->
					
					<if test="additionalCode != null">
						<choose>
							<when test="additionalCode.equals('emptyAddi')">
								AND additional_code is null
							</when>
							<otherwise>
								AND additional_code = #{additionalCode}
							</otherwise>
						</choose>
					</if>
					
				</when>
				<otherwise>
	
				</otherwise>
			</choose>
				
		</where>
	</select>
	
	<!-- 년도 별로 쿼리 나누는 것 필요하다. -->
	<select id="selectBookHeldListToExcel" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title, writer, publisher, pub_date, price,
			isbn10, isbn13, category, book_shelf, description,
			reg_date, edit_date,
			local_id_barcode, purchased_or_donated, available,
			additional_code, classification_code, author_code,
			volume_code, copy_code,
			tag, rf_id, book_or_not, page, book_size, image_link,
			library_id_lib, c.id_country, c.name_country
		FROM book_held h
		LEFT OUTER JOIN book_country c ON h.id_country= c.id_country
		WHERE library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
		<if test="regDate != null">
			AND DATE_FORMAT(reg_date, '%Y') = #{regDate}
		</if>
		
		<if test="bookShelf!=null">
			<if test='bookShelf.equals("uncateg")'>
				AND book_shelf is null
			</if>
			<if test='bookShelf != null and !bookShelf.equals("uncateg")'>
				AND book_shelf = #{bookShelf}
			</if>
		</if>
		
		ORDER BY id ASC
	</select>
	
	<!-- getRegTodayBookHeldList 오늘 등록한 도서 목록 보이기 -->
	<select id="selectRegTodayBookHeldList" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title, writer, publisher, pub_date, price,
			isbn10, isbn13, category, book_shelf, description,
			reg_date, edit_date,
			local_id_barcode, sorting_index, purchased_or_donated, available,
			additional_code, classification_code, author_code,
			volume_code, copy_code,
			tag, rf_id, book_or_not, page, book_size, image_link,
			library_id_lib, c.id_country, c.name_country
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		LEFT OUTER JOIN book_country c ON h.id_country= c.id_country
		WHERE library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
			AND reg_date &gt; CURDATE()
			AND reg_date &lt; DATE_ADD(CURDATE(), INTERVAL 1 DAY)
		ORDER BY id DESC
		LIMIT #{limitStart}, #{listCount}
	</select>
	
	<!-- pagination을 위한 전체 도서수 체크 -->
	<select id="selectRegTodayBookCountForPage" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			COUNT(id)
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		<!-- LEFT OUTER JOIN book_country c ON h.id_country= c.id_country -->
		<where>
			library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
				AND reg_date &gt; CURDATE()
				AND reg_date &lt; DATE_ADD(CURDATE(), INTERVAL 1 DAY)
			<!-- <if test="(title != null) || (writer != null)
						|| (publisher != null) || (nameCountry != null)">
				AND (
					<if test="title != null">
						(REPLACE(title,' ','')) LIKE concat('%', #{title}, '%')
							OR (title LIKE concat('%', #{title}, '%'))
					</if>
					<if test="writer != null">
						(REPLACE(writer,' ','')) LIKE concat('%', #{writer}, '%')
							OR (writer LIKE concat('%', #{writer}, '%'))
					</if>
					<if test="publisher != null">
						(REPLACE(publisher,' ','')) LIKE concat('%', #{publisher}, '%')
							OR (publisher LIKE concat('%', #{publisher}, '%'))
					</if>
					<if test="nameCountry != null">
						(REPLACE(name_country,' ','')) LIKE concat('%', #{nameCountry}, '%')
							OR (name_country LIKE concat('%', #{nameCountry}, '%'))
					</if>
				)
			</if> -->
			<!-- 오늘등록한 책에서는 검색할 필요가 없다. -->
		</where>
	</select>
	
	<!-- getBookHelditem
		BookHeldView.java 에서 사용-->
	<select id="selectBookHeld" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title, writer, publisher, pub_date, price,
			isbn10, isbn13, category, book_shelf, description,
			reg_date, edit_date,
			local_id_barcode, purchased_or_donated, available,
			additional_code, classification_code, author_code,
			volume_code, copy_code,
			tag, rf_id, book_or_not, page, book_size, image_link,
			library_id_lib, c.id_country, c.name_country, l.name_lib
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		INNER JOIN library l ON h.library_id_lib = l.id_lib
		LEFT OUTER JOIN book_country c ON h.id_country= c.id_country
		WHERE library_id_lib=#{libraryIdLib}
			AND (
						local_id_barcode=#{localIdBarcode}
						AND (available = 0 OR available = 1)
						<!-- brwBookOK에서 id 없이 바코드만으로 검색이 필요함. 따라서 아래와 같은 조건분기 추가. -->
						<if test="id != null &amp;&amp; id != 0">
							OR id=#{id}
						</if>
					)
		ORDER BY id DESC
		LIMIT 1
		<!-- WHERE id_lib_book = #{idLibBook} AND id_code_book = #{idCodeBook} -->
	</select>
	
	<!-- 도서 대출시, 숫자 기입만으로 도서 판별을 위한 쿼리 -->
	<select id="selectBookHeldItemByOnlyNumToSortingIndex"  parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			id
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib} AND sorting_index=#{sortingIndex}
			AND (available = 0 OR available = 1)
		LIMIT 1
	</select>
	
	<select id="selectBookHeldCountByBarcode" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			COUNT(id)
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
			AND local_id_barcode=#{localIdBarcode}
	</select>
	
	<!-- <select id="selectBookHeld" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, book_shelf, reg_date, edit_date, local_id_barcode, purchased_or_donated,
			available, additional_code, copy_code
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib} AND id=#{id}

	</select> 이거 id로 호출할때가 필요할 것 같은데 확인해서 분리하거나 하기.-->
	
	<!-- 책 공통DB에 등록되어 있는지 확인
				이후 제목과 저자 비교할때, 띄어쓰기를 다 제거한걸로 비교로 바꾸자-->
	<select id="selectBookCount" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			count(id_book)
		FROM book
		WHERE isbn13_book = #{isbn13Book}
		OR (title_book = #{titleBook} AND writer_book = #{writerBook})
	</select>
	
	<!-- book 테이블에 등록이후 bookId를 가져오기 위한 쿼리
				이후 제목과 저자 비교할때, 띄어쓰기를 다 제거한걸로 비교로 바꾸자  -->
	<select id="selectBookId" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id_book
		FROM book
		WHERE isbn13_book = #{isbn13Book}
		OR (title_book = #{titleBook} AND writer_book = #{writerBook})
		ORDER BY id_book ASC
		LIMIT 1
	</select>
	
	<insert id="insertBook" parameterType="com.gaimit.mlm.model.BookHeld" useGeneratedKeys="true" keyProperty="id_book">
		INSERT INTO book (
			title_book, writer_book, category_book,
			publisher_book, pub_date_book, price_book, isbn10_book, isbn13_book,
			description_book, book_or_not, page, book_size, image_link, classification_code,
			author_code, volume_code, id_country
		) VALUES (
			#{titleBook}, #{writerBook}, #{categoryBook},
			#{publisherBook}, #{pubDateBook}, #{priceBook}, #{isbn10Book}, #{isbn13Book},
			#{descriptionBook}, #{bookOrNot}, #{page}, #{bookSize}, #{imageLink}, #{classificationCode},
			#{authorCode}, #{volumeCode}, #{idCountry}
		)
	</insert>
	
	<insert id="insertBookHeld" parameterType="com.gaimit.mlm.model.BookHeld" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO book_held (
			library_id_lib, book_id_book,
			title, writer, publisher, pub_date, pub_date_year, price,
			isbn10, isbn13, category, book_shelf, description,
			reg_date, edit_date,
			local_id_barcode, sorting_index, purchased_or_donated, available,
			additional_code, classification_code, author_code,
			volume_code, copy_code,
			tag, rf_id, book_or_not, page, book_size, image_link,
			id_country
		) VALUES (
			#{libraryIdLib}, #{bookIdBook},
			#{title}, #{writer}, #{publisher}, #{pubDate}, #{pubDateYear}, #{price},
			#{isbn10}, #{isbn13}, #{category}, #{bookShelf}, #{description},
			<choose>
				<when test="regDate != null">
					#{regDate},
				</when>
				<otherwise>
					now(),
				</otherwise>
			</choose>
			 now(),
			#{localIdBarcode}, #{sortingIndex}, #{purchasedOrDonated}, #{available},
			#{additionalCode}, #{classificationCode}, #{authorCode},
			#{volumeCode}, #{copyCode},
			#{tag}, #{rfId}, #{bookOrNot}, #{page}, #{bookSize}, #{imageLink},
			#{idCountry}
		)
	</insert>
	
	<!-- bookHeld 테이블에 중복되는 도서가 있는지 검사 -->
	<select id="selectBookHeldCount" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			count(id)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib}
			AND (available = 0 OR available = 1)
			AND (
				isbn13 = #{isbn13}
				OR (title = #{title} AND writer = #{writer})
			)
	</select>
	
	<select id="selectBookHeldBookIdBook" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			book_id_book
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib}
			AND (available = 0 OR available = 1)
			AND (
				isbn13 = #{isbn13}
				OR (title = #{title} AND writer = #{writer})
			)
		ORDER BY book_id_book DESC
		LIMIT 1
	</select>
	
	<!-- bookHeld 도서 첫등록체크
				현재 사용하는 곳이 없는 듯하니 추후 삭제 예정 -->
	<select id="selectBookHeldFirstCount" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			count(id)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib}
	</select>
	
	<!-- 중간에 비어있는 복본 검색 1은 없음 2가 최소, 2를 기준으로 비어 있는 숫자를 찾기 때문에,
		2가 없이 연속된 숫자면, 최종번호를 보여줌. 따라서 2가 존재해야함. -->
	<select id="selectLastEmptyCopyCode" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			min(copy_code+1)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib}
			AND (available = 0 OR available = 1) AND (copy_code != 0)
			AND (
				isbn13 = #{isbn13}
				OR (title = #{title} AND writer = #{writer})
			)
			AND copy_code+1
			NOT IN (SELECT copy_code FROM book_held
								WHERE library_id_lib = #{libraryIdLib}
								AND (available = 0 OR available = 1) AND (copy_code != 0)
								AND (
									isbn13 = #{isbn13}
									OR (title = #{title} AND writer = #{writer})
								)
							)
		LIMIT 1;
	</select>
	
	<!-- 연속된 복본번호 검색을 위해서는 최소값인 2가 존재해야한다. -->
	<select id="selectFirstCopyCode" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			min(copy_code)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib}
			AND (available = 0 OR available = 1) AND (copy_code != 0)
			AND (
				isbn13 = #{isbn13}
				OR (title = #{title} AND writer = #{writer})
			)
	</select>
	
	<!-- 결과값이 0이면 복본기호는 0이 아니라는 말이고, 결과값이 1이면 0이라는 말 -->
	<select id="selectZeroCopyCodeCount" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			COUNT(copy_code)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib}
			AND (available = 0 OR available = 1) AND (copy_code = 0)
			AND (
				isbn13 = #{isbn13}
				OR (title = #{title} AND writer = #{writer})
			)
	</select>
	
	<!-- 비어있는 번호를 찾기 위한 쿼리, 중간에 비어있는 값이 없으면 이어진 값에서 최대값+1 나옴 
		#{barcodeInitCount} 이놈은 모델에만 선언한 놈으로, bookHeld에 변수로 넣어서
		바코드 헤드의 길이를 측정하기 위해 사용한다.-->
	<select id="selectEmptyLocalBarcode" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			MIN(sorting_index)+1
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib} AND (available = 0 OR available =1)
		AND ((sorting_index+1)
		NOT IN
			(SELECT sorting_index
				FROM book_held
				WHERE (library_id_lib = #{libraryIdLib} AND (available = 0 OR available =1))))
		<!-- ORDER BY local_id_barcode DESC
		LIMIT 1; -->
	</select>
	
	<!-- 1이 존재한다면, 중간에 비어있는 번호의 최소값을 찾아감.
				1인지 아닌지 비교하기 위한 시작 값-->
	<select id="selectFirstLocalBarcode" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			MIN(sorting_index)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib} AND (available = 0 OR available =1)
	</select>
	
	<!-- 바코드 최종번호 불러오기 마지막에 사용한 바코드 헤드를 참고하기 위하여. -->
	<select id="selectLastLocalBarcode" parameterType="com.gaimit.mlm.model.BookHeld" resultType="string">
		SELECT
			local_id_barcode
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib} AND (available = 0 OR available =1)
		ORDER BY id DESC
		LIMIT 1
	</select>
	
	<select id="selectLastSortingIndex" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
		 MAX(sorting_index)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib} AND (available = 0 OR available =1)
	</select>
	
	<!-- 혹시나 모를 바코드 중복체크 -->
	<select id="selectDupCheckLocalBarcode" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			COUNT(id)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib} AND (available = 0 OR available =1)
		AND (sorting_index = #{newBarcodeForDupCheck})
	</select>
	
	
	
	<!-- 도서 삭제 bookHeldDelete.java -->
	<delete id="deleteBookHeldItem" parameterType="com.gaimit.mlm.model.BookHeld">
		DELETE FROM book_held
		WHERE id=#{id} AND library_id_lib=#{libraryIdLib}
	</delete>
	
	<!-- 도서 폐기 -->
	<update id="updateBookHeldDiscard" parameterType="com.gaimit.mlm.model.BookHeld">
		UPDATE book_held SET
			edit_date=now(), local_id_barcode=CONCAT(#{localIdBarcode}, 'x'),
			available = 2
		WHERE library_id_lib=#{libraryIdLib} AND local_id_barcode=#{localIdBarcode}
			AND id=#{id}
	</update>
	
	<!-- 폐기도서 목록 보기 bookHeldDiscardList -->
	<select id="selectBookHeldDiscardList" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title, writer, publisher, pub_date,
			isbn13, classification_code, author_code, volume_code,
			book_shelf, reg_date, edit_date,
			local_id_barcode, purchased_or_donated, available, additional_code, copy_code,
			library_id_lib
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		WHERE library_id_lib=#{libraryIdLib} AND available = 2
		<if test="(title != null) || (writer != null) || (publisher != null)">
				AND (
					<if test="title != null">
						(REPLACE(title,' ','')) LIKE concat('%', #{title}, '%')
							OR (title LIKE concat('%', #{title}, '%'))
					</if>
					<if test="writer != null">
						(REPLACE(writer,' ','')) LIKE concat('%', #{writer}, '%')
							OR (writer LIKE concat('%', #{writer}, '%'))
					</if>
					<if test="publisher != null">
						(REPLACE(publisher,' ','')) LIKE concat('%', #{publisher}, '%')
							OR (publisher LIKE concat('%', #{publisher}, '%'))
					</if>
				)
			</if>
		ORDER BY edit_date DESC
		<if test="limitStart != 0 &amp;&amp; listCount != 0">
			LIMIT #{limitStart}, #{listCount}
		</if>
	</select>
	
		<!-- pagination을 위한 폐기도서 전체 도서수 체크 -->
	<select id="selectBookDiscardCountForPage" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			COUNT(id)
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		<where>
			library_id_lib=#{libraryIdLib} AND available = 2
			<if test="(title != null) || (writer != null) || (publisher != null)">
				AND (
					<if test="title != null">
						(REPLACE(title,' ','')) LIKE concat('%', #{title}, '%')
							OR (title LIKE concat('%', #{title}, '%'))
					</if>
					<if test="writer != null">
						(REPLACE(writer,' ','')) LIKE concat('%', #{writer}, '%')
							OR (writer LIKE concat('%', #{writer}, '%'))
					</if>
					<if test="publisher != null">
						(REPLACE(publisher,' ','')) LIKE concat('%', #{publisher}, '%')
							OR (publisher LIKE concat('%', #{publisher}, '%'))
					</if>
				)
			</if>
		</where>
	</select>
	
	<!-- 도서 정보 수정.java -->
	<update id="updateBookHeldItem" parameterType="com.gaimit.mlm.model.BookHeld">
		UPDATE book_held SET
			edit_date=now(),
			title=#{title}, writer=#{writer}, publisher=#{publisher}, pub_date=#{pubDate},
			price=#{price}, isbn10=#{isbn10}, isbn13=#{isbn13},
			category=#{category}, book_shelf=#{bookShelf},
			local_id_barcode=#{localIdBarcode}, sorting_index=#{sortingIndex},
			purchased_or_donated=#{purchasedOrDonated},
			additional_code=#{additionalCode}, classification_code=#{classificationCode},
			author_code=#{authorCode}, volume_code=#{volumeCode}, copy_code=#{copyCode},
			tag=#{tag}, rf_id=#{rfId}, page=#{page}, book_or_not=#{bookOrNot},
			image_link=#{imageLink}
		WHERE library_id_lib=#{libraryIdLib} AND id=#{id}
	</update>
	
	<!-- printTag.java getPrintBookHeldList -->
	<select id="selectPrintBookHeldList" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title,  additional_code, copy_code,
			classification_code, author_code, volume_code,
			local_id_barcode, name_lib, book_shelf
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		INNER JOIN library l ON h.library_id_lib = l.id_lib
		WHERE library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
		<if test="(regDate != null) || (localIdBarcode != null) 
			|| (title != null)">
				AND (
					<if test="regDate != null">
						<!-- 날짜비교할 수 있게 포멧 변경. -->
						date_format(reg_date, '%Y-%m-%d') = #{regDate}
					</if>
					<if test="localIdBarcode != null">
						local_id_barcode LIKE CONCAT('%',#{localIdBarcode}, '%')
					</if>
					<if test="title != null">
						(REPLACE(title,' ','')) LIKE concat('%', #{title}, '%')
							OR (title LIKE concat('%', #{title}, '%'))
					</if>
				)
		</if>
		ORDER BY local_id_barcode DESC
		<if test="listCount != 0">
			LIMIT #{limitStart}, #{listCount}
		</if>
	</select>
	
	<!-- 프린트 태그 id 값으로 하나씩 가져오기 -->
	<select id="selectPrintBookByBookId" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title,  additional_code, copy_code,
			classification_code, author_code, volume_code,
			local_id_barcode, name_lib
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		INNER JOIN library l ON h.library_id_lib = l.id_lib
		WHERE library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
			AND id=#{id}
		ORDER BY sorting_index DESC
		LIMIT 1
	</select>
	
	<!-- 중간에 추가된 sorting_index 컬럼 정리를 위해 한번 사용하려고 만든 쿼리 -->
	<update id="updateSortingIndex" parameterType="com.gaimit.mlm.model.BookHeld">
		UPDATE book_held SET
		 	sorting_index=#{sortingIndex}
		 WHERE library_id_lib=#{libraryIdLib} AND available=1
		 		AND id=#{id}
	</update>
	
	<!-- tag 바꾸기 -->
	<update id="updateBookHeldTag" parameterType="com.gaimit.mlm.model.BookHeld">
		UPDATE book_held SET
		 	tag=#{tag}
		 WHERE library_id_lib=#{libraryIdLib}
		 		AND id=#{id}
	</update>
	
	<!-- 바코드 중복 알림 주기 -->
	<select id="checkDupBarcodeBookHeld" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			local_id_barcode
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib}
		GROUP BY local_id_barcode
		HAVING COUNT(local_id_barcode)>1
	</select>
	
	<!-- 별치기호 text파일 읽어들여서 수정하기 -->
	<update id="updateAddiCodeByBarcodeNum" parameterType="com.gaimit.mlm.model.BookHeld">
		UPDATE book_held SET
			<!-- 서가 일때 -->
			<choose>
				<when test="bookShelf != null">
					book_shelf=#{bookShelf}
				</when>
				<!-- 별치기호 일때 -->
				<when test="additionalCode != null">
					additional_code=#{additionalCode}
				</when>
				<!-- 분류기호 일때 -->
				<when test="classificationCode != null">
					classification_code=#{classificationCode}
				</when>
				<!-- 저자기호 일때 -->
				<when test="authorCode != null">
					author_code=#{authorCode}
				</when>
				<!-- 권차기호 일때 -->
				<when test="volumeCode != null">
					volume_code=#{volumeCode}
				</when>
				<!-- 복본기호 일때 -->
				<when test="copyCode != null">
					copy_code=#{copyCode}
				</when>
			</choose>
		WHERE library_id_lib=#{libraryIdLib} AND local_id_barcode=#{localIdBarcode}
	</update>
	
	<!-- 도서정보 엑셀에서 가져오는 값 현재 상황 파악을 위해서, db에 요청 몇개 등록되었는지 가져오기 -->
	<select id="selectCountImportExcelData" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT COUNT(id) FROM book_held
		WHERE library_id_lib=#{libraryIdLib}
			AND edit_date &gt;= #{editDate}
	</select>
	
	<!-- 도서 id를 이용하여 도서 상태(대출중, 대출가능) 변경하기 -->
	<update id="updateAvailableById" parameterType="com.gaimit.mlm.model.BookHeld">
		UPDATE book_held SET
			available = #{available}
		WHERE library_id_lib=#{libraryIdLib}
			AND id = #{id}
	</update>
	
	<!-- 서가이름을 그룹으로 묶어서 보기 -->
	<select id="selectBookShelfGroup" parameterType="com.gaimit.mlm.model.BookHeld" resultType="string">
		SELECT book_shelf FROM book_held
		WHERE library_id_lib=#{libraryIdLib}
		GROUP BY book_shelf
	</select>
	
	<!-- 도서 바코드 번호 일괄 수정 임시용으로 구성 -->
	<update id="updateBookBarcodeByBarcode" parameterType="com.gaimit.mlm.model.BookHeld">
		UPDATE book_held SET
			local_id_barcode = #{modiBarcode}
		WHERE library_id_lib=#{libraryIdLib}
			AND local_id_barcode=#{localIdBarcode}
	</update>
	
	
	<!-- 이하 user self 페이지 -->
	<select id="selectBookListUserSelf" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title, writer, publisher, pub_date, price,
			isbn10, isbn13, category, book_shelf, description,
			reg_date, edit_date,
			local_id_barcode, purchased_or_donated, available,
			additional_code, classification_code, author_code,
			volume_code, copy_code,
			tag, rf_id, book_or_not, page, book_size, image_link,
			library_id_lib
		FROM book_held h
		WHERE library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
		<choose>
			<when test="(title != null) || (writer != null)
							|| (publisher != null) || (bookShelf != null)">
				<if test="title != null">
					AND (
						(REPLACE(title,' ','')) LIKE concat('%', #{title}, '%')
						OR (title LIKE concat('%', #{title}, '%'))
						OR (local_id_barcode LIKE concat('%', #{title}, '%'))
						OR (rf_id LIKE CONCAT('%', #{title}, '%'))
						OR (isbn13 LIKE CONCAT('%', #{title}, '%'))
						<if test="tag != null">
							OR (tag LIKE CONCAT('%', #{title}, '%'))
						</if>
					)
				</if>
				<if test="writer != null">
					AND (
						(REPLACE(writer,' ','')) LIKE concat('%', #{writer}, '%')
						OR (writer LIKE concat('%', #{writer}, '%'))
					)
				</if>
				<if test="publisher != null">
					AND (
						(REPLACE(publisher,' ','')) LIKE concat('%', #{publisher}, '%')
						OR (publisher LIKE concat('%', #{publisher}, '%'))
					)
				</if>
					
				ORDER BY volume_code*1 ASC, title ASC
			</when>
			<otherwise>
				ORDER BY id ASC
			</otherwise>
		</choose>
	</select>
	
	<!-- 도서 1권 정보 가져오기, 결과 값이 없을때 예외처리 안하기. -->
	<select id="selectBookHeldItemUserSelf" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title, writer, publisher, pub_date, price,
			isbn10, isbn13, category, book_shelf, description,
			reg_date, edit_date,
			local_id_barcode, purchased_or_donated, available,
			additional_code, classification_code, author_code,
			volume_code, copy_code,
			tag, rf_id, book_or_not, page, book_size, image_link,
			library_id_lib, c.id_country, c.name_country
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		LEFT OUTER JOIN book_country c ON h.id_country= c.id_country
		WHERE library_id_lib=#{libraryIdLib}
			AND (
						local_id_barcode=#{localIdBarcode}
						AND (available = 0 OR available = 1)
						<!-- brwBookOK에서 id 없이 바코드만으로 검색이 필요함. 따라서 아래와 같은 조건분기 추가. -->
						<if test="id != null &amp;&amp; id != 0">
							OR id=#{id}
						</if>
					)
		ORDER BY id DESC
		LIMIT 1
		<!-- WHERE id_lib_book = #{idLibBook} AND id_code_book = #{idCodeBook} -->
	</select>
	
	
	<!-- 도서관 내에 이미 보유중인 도서인지 판별하는 쿼리 검색 제목과 저자 모두 공백제거-->
	<select id="selectBookListCheckDupNoBlank" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			*
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib}
			AND (available = 0 OR available = 1)
		<choose>
			<when test="isbn13 != null">
				AND (
					isbn13 = #{isbn13}
					OR isbn10 = #{isbn13}
				)
			</when>
			<when test="(title != null) &amp;&amp; (writer != null)">
				AND (
					REPLACE(title,' ','') LIKE CONCAT('%', #{title}, '%')
					AND REPLACE(writer,' ','') LIKE CONCAT('%', #{writer}, '%')
				)
			</when>
			<otherwise>
				
			</otherwise>
		</choose>
	</select>
	
	
		<!-- 도서 바코드 번호로 권차기호 일괄 수정 등록번호 시작-끝 권차기호 1-끝 -->
	<update id="updateVolumeCodeBatchByBarcode" parameterType="com.gaimit.mlm.model.BookHeld">
		UPDATE book_held SET
			volume_code = #{volumeCode}
		WHERE library_id_lib=#{libraryIdLib}
			AND local_id_barcode=#{localIdBarcode}
	</update>
	
	<!-- 도서 중복체크를 오로지 isbn으로만 하는 -->
	<select id="selectDupCountByOnlyISBN" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			COUNT(id)
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib}
			AND (available = 0 OR available = 1)
			AND isbn13 = #{isbn13}
	</select>
	
	
	
	<!-- 별치기호 그룹으로 가져오기 -->
	<select id="selectAddiCodeGroup" parameterType="com.gaimit.mlm.model.BookHeld" resultType="string">
		SELECT
			additional_code
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib}
		GROUP BY additional_code
	</select>
	
	
	
	<!-- 바코드 범위 직접 입력 출력방식 -->
	<select id="selectPrintListByBarcodeRange" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title,  additional_code, copy_code,
			classification_code, author_code, volume_code,
			local_id_barcode, name_lib, book_shelf
		FROM book_held h
		<!-- INNER JOIN book b ON h.book_id_book = b.id_book -->
		INNER JOIN library l ON h.library_id_lib = l.id_lib
		WHERE library_id_lib=#{libraryIdLib} AND (available = 0 OR available = 1)
			<if test="localIdBarcode != null">
				AND local_id_barcode LIKE CONCAT('%',#{localIdBarcode}, '%')
			</if>
			<if test="sortingIndex != 0">
				AND sorting_index &lt; ${sortingIndex+1}
			</if>
			<if test="authorCode != null">
				AND author_code = #{authorCode}
			</if>
			
		ORDER BY local_id_barcode DESC
		<if test="listCount != 0 and authorCode == null">
			LIMIT #{listCount}
		</if>
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	

</mapper>